# PDF Sample File Placeholder

## Generation Instructions
To create the actual PDF sample file, use one of these methods:

### Method 1: Using Python (ReportLab)
```bash
pip install reportlab
python3 -c "
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter

c = canvas.Canvas('sample.pdf', pagesize=letter)
c.setTitle('RAG Taxonomy PDF Test')

# Title
c.setFont('Helvetica-Bold', 16)
c.drawString(100, 750, 'RAG Taxonomy System - PDF Test Document')

# Content
c.setFont('Helvetica', 12)
c.drawString(100, 700, 'This PDF document tests document ingestion capabilities.')
c.drawString(100, 680, 'Key concepts covered:')
c.drawString(120, 660, '• RAG (Retrieval-Augmented Generation)')
c.drawString(120, 640, '• Document taxonomy classification') 
c.drawString(120, 620, '• PDF parsing and text extraction')
c.drawString(120, 600, '• Vector embedding generation')

c.drawString(100, 550, 'Expected Classification: [\"AI\", \"RAG\"]')
c.drawString(100, 530, 'Expected Confidence: > 0.80')
c.drawString(100, 510, 'Document Type: Technical specification')

c.drawString(100, 450, 'This document should be processed by:')
c.drawString(120, 430, '1. PyMuPDF for text extraction')
c.drawString(120, 410, '2. Text chunking (500 chars, 128 overlap)')
c.drawString(120, 390, '3. Taxonomy classification')
c.drawString(120, 370, '4. Vector embedding storage')

c.save()
"
```

### Method 2: Using wkhtmltopdf
```bash
# Install wkhtmltopdf first
sudo apt-get install wkhtmltopdf

# Convert HTML to PDF
wkhtmltopdf sample.html sample.pdf
```

### Method 3: Using Pandoc
```bash
# Install pandoc
sudo apt-get install pandoc

# Convert markdown to PDF
pandoc sample.md -o sample.pdf
```

## Expected PDF Content
The generated PDF should contain:
- Title: "RAG Taxonomy System - PDF Test Document"
- Content about RAG systems and document processing
- Clear mentions of taxonomy classification
- Expected classification path: ["AI", "RAG"]
- Expected confidence: > 0.80

## Test Verification
After PDF generation, verify:
1. File size > 1KB
2. Contains searchable text (not just images)
3. PyMuPDF can extract text successfully
4. Classification confidence meets threshold